services:
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: npm run start:dev reservations      
    env_file:
      - ./apps/reservations/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
      - payments
    environment:
      MONGO_URL: mongodb://mongo:27017/sleepr
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_URL: mongodb://mongo:27017/sleepr    
  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    env_file:
      - ./apps/payments/.env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
    environment:
      MONGO_URL: mongodb://mongo:27017/sleepr
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
    environment:
      MONGO_URL: mongodb://mongo:27017/sleepr    
  mongo:
    image: mongo
    ports:
      - '27018:27017'  # Expose to host for Compass
    volumes:
      - mongo_data:/data/db  # Persist Mongo data
  redis:
    image: redis
    ports:
      - "6380:6379"
    restart: always
    volumes:
      - redis_data:/data  # Persist Redis data    

volumes:
  mongo_data:
  redis_data:  
